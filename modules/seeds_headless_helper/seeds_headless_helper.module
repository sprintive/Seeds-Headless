<?php 

use GuzzleHttp\Exception\GuzzleException;
use Drupal\Core\Entity\EntityInterface;



/**
 * Implements hook_entity_base_field_info().
 */
function seeds_nextjs_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];

  if ($entity_type->id() == 'node' || $entity_type->id() === 'taxonomy_term') {
 
    $fields['breadcrumbs'] = BaseFieldDefinition::create('string_cacheable')
      ->setLabel(t('Breadcrumbs'))
      ->setDescription(t('The breadcrumbs'))
      ->setCustomStorage(TRUE)
      ->setTargetEntityTypeId($entity_type->id())
      ->setComputed(TRUE)
      ->setInternal(FALSE)
      ->setClass('\Drupal\seeds_nextjs\BreadcrumbsComputedField');


  $fields['menu_items'] = BaseFieldDefinition::create('string_cacheable')
    ->setLabel(t('Menu Items'))
    ->setDescription(t('The menu items'))
    ->setCustomStorage(TRUE)
    ->setTargetEntityTypeId($entity_type->id())
    ->setComputed(TRUE)
    ->setInternal(FALSE)
    ->setClass('\Drupal\seeds_nextjs\MenuItemsComputedField');

  $fields['parent_menu_title'] = BaseFieldDefinition::create('string')
    ->setLabel(t('Parent Menu Title'))
    ->setDescription(t('The parent menu title'))
    ->setCustomStorage(TRUE)
    ->setTargetEntityTypeId($entity_type->id())
    ->setComputed(TRUE)
    ->setInternal(FALSE)
    ->setClass('\Drupal\seeds_nextjs\ParentMenuTitleComputedField');

  $fields['parent_menu_title'] = BaseFieldDefinition::create('string')
    ->setLabel(t('Parent Menu Title'))
    ->setDescription(t('The parent menu title'))
    ->setCustomStorage(TRUE)
    ->setTargetEntityTypeId($entity_type->id())
    ->setComputed(TRUE)
    ->setInternal(FALSE)
    ->setClass('\Drupal\seeds_nextjs\ParentMenuTitleComputedField');

  $fields['parent_summary'] = BaseFieldDefinition::create('string')
    ->setLabel(t('Parent Summary'))
    ->setDescription(t('The parent menu summary'))
    ->setCustomStorage(TRUE)
    ->setTargetEntityTypeId($entity_type->id())
    ->setComputed(TRUE)
    ->setInternal(FALSE)
    ->setClass('\Drupal\seeds_nextjs\ParentMenuSummaryComputedField');

  $fields['parent_canonical'] = BaseFieldDefinition::create('string')
    ->setLabel(t('Parent canonical'))
    ->setDescription(t('The parent menu canonical'))
    ->setCustomStorage(TRUE)
    ->setTargetEntityTypeId($entity_type->id())
    ->setComputed(TRUE)
    ->setInternal(FALSE)
    ->setClass('\Drupal\seeds_nextjs\ParentMenuCanonicalComputedField');

  return $fields;
}

/**
 * Implements hook_entity_update().
 */
function seeds_headless_helper_entity_update(EntityInterface $entity) {
  $allow_clearing = &drupal_static('seeds_nextjs_allow_clearing');
  $allow_clearing = TRUE;
}

/**
 * Implements hook_rebuild().
 */
function seeds_headless_helper_rebuild() {
  $flush_cache_on_rebuild = (bool) \Drupal::config('seeds_headless_helper.settings')->get('flush_cache_on_rebuild');

  if (!$flush_cache_on_rebuild) {
    return;
  }

  /** @var \Drupal\seeds_headless_helper\SeedsNextJsRequesterInterface $requester */
  $requester = \Drupal::service('seeds_headless_helper.requester');

  try {
    $requester->request('/api/flush-cache', 'POST');
  } catch (GuzzleException $e) {
    \Drupal::logger('seeds_headless_helper')->error($e->getMessage());
    \Drupal::messenger()->addError(t('Failed to flush the cache in NextJS server.'));
  }
}
